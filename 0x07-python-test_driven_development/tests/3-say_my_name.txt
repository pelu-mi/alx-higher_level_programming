# 3-say_my_name.txt

===========================
How to use 3-say_my_name.py
===========================

This module defines a function ``say_my_name(first_name, last_name)``. This
function prints out the names passed into the function.

Usage
=====

``say_my_name(...)`` prints out the text 'My name is' followed by the first
name and then the lastname. The input is required to be a string.


String
======

First we import the function.

::

>>> say_my_name = __import__('3-say_my_name').say_my_name


This function works as expected with 2 strings.

::

>>> say_my_name("","")
My name is  
>>> say_my_name("John","Doe")
My name is John Doe


It also works with one string as this assumes the last string is empty

::

>>> say_my_name("Doe")
My name is Doe 
>>> say_my_name("John")
My name is John 


Non-Strings
===========

If either of the inputs is not a string, a TypeError is raised

::

>>> say_my_name(2, "John")
Traceback (most recent call last):
TypeError: first_name must be a string
>>> say_my_name("John", 2)
Traceback (most recent call last):
TypeError: last_name must be a string
>>> say_my_name(2)
Traceback (most recent call last):
TypeError: first_name must be a string


Also, if there are no arguments, it raises a TypeError

::

>>> say_my_name()
Traceback (most recent call last):
TypeError: say_my_name() missing 1 required positional argument: 'first_name'
