# 2-matrix_divided.txt

===============================
 How to Use 2-matrix_divided.py
===============================

This module defines a function ``matrix_divided(matrix, div)``. This
function divides each element of a matrix (list of lists of numbers)
by a divisor.

Usage
=====

``matrix_divided(...)`` returns a new list of lists of numbers. This
was designed to work with integers and floats only. The answer is
approximated to 2 decimal places.


Numbers
=======

First we import the function.

::

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

This function works with positive as well as negative numbers

::

>>> matrix_divided([[3]], 3)
[[1.0]]
>>> matrix_divided([[3]], -3)
[[-1.0]]
>>> matrix_divided([[-6]], -2)
[[3.0]]

It also works with empty list of lists.

::

>>> matrix_divided([[]], -2)
[[]]
>>> matrix_divided([[]], 3)
[[]]

It works with float members in the list of lists

::

>>> matrix_divided([[2.6], [1.3]], 1.3)
[[2.0], [1.0]]
>>> matrix_divided([[21.6], [1.9]], -1.8)
[[-12.0], [-1.06]]

Integers and floats can be combined

::

>>> matrix_divided([[21.6], [3]], 5)
[[4.32], [0.6]]
>>> matrix_divided([[21.3], [3]], 2.5)
[[8.52], [1.2]]


Non-Numbers
===========

``matrix_divided(...)`` expects that both inputs contain either integers or
floats. If either argument is not an int or a flot, a TypeError is raised.

::

>>> matrix_divided("3", 2.5)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[21.6], [1.9]], '')
Traceback (most recent call last):
TypeError: div must be a number

::

Each row of the matrix must be the same size, else, a TypeError is raised

::

>>> matrix_divided([[21.3], [3, 5]], 2.5)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

::

If the divisor is 0, a ZeroDivisionError is raised.

::

>>> matrix_divided([[21.3], [3]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

::

if both arguments contain non-ints or non-floats, the TypeError is raised for
the first value only

::

>>> matrix_divided("5", "hey")
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

::

If the divisor provided is infinity, the function prints a new matrix of 0's
and if the divisor is nan, the result is a new matrix of nan's

::

>>> matrix_divided([[21.3], [3]], float('inf'))
[[0.0], [0.0]]
>>> matrix_divided([[21.3], [3]], float('nan'))
[[nan], [nan]]

::

If infinity and nan appear in the matrix, the result of their division would
not change them.

::

>>> matrix_divided([[21.3], [float('inf')]], 2.5)
[[8.52], [inf]]
>>> matrix_divided([[21.3], [float('nan')]], 2.5)
[[8.52], [nan]]

::

If you have nan and infinity appearing on both sides of the division,
here is the result.

::

>>> matrix_divided([[21.3], [float('nan')], [float('inf')]], float('inf'))
[[0.0], [nan], [nan]]
>>> matrix_divided([[21.3], [float('nan')], [float('inf')]], float('nan'))
[[nan], [nan], [nan]]
